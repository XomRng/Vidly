@model Vidly.ViewModels.CustomerFormViewModel

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nowy klient</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Proszę popraw następujące błędy.") // true = explude validation property errors
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new {@class = "form-control"})
        @Html.ValidationMessageFor(m=> m.Customer.Name)
    </div>   
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Wybierz membership", new {@class = "form-control"})
        @Html.ValidationMessageFor(m=> m.Customer.MembershipTypeId)
    </div> 
    <div class="form-group">
        @*<label for="Birthdate">Date of birth</label>*@
        @Html.LabelFor(m => m.Customer.Birthdate)
        @Html.TextBoxFor(m => m.Customer.Birthdate,"{0:d MMM yyyy}", new {@class = "form-control"})
        @Html.ValidationMessageFor(m=> m.Customer.Birthdate)
    </div>    
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m=>m.Customer.IsSubscribedToNewsletter) Subskrybuj do newslettera
        </label>
    </div>
    //ukryty parametr przesyłany do metody kontrolera, potrzebny jesli nie chcesz go wyswietlac a jesli w HTTP Post chcesz go mieć przesłanego w parametrze
    @Html.HiddenFor(m=>m.Customer.Id)
    //Dodaje cookie do komputera usera i ukrytą forme
    @Html.AntiForgeryToken()
    <button type ="submit" class="btn btn-primary">Save</button> 
}
@*//takie cos trzeba dodawac zeby byla walidacja po stronie klienta*@
@section scripts
{
    @Scripts.Render("~/ bundles / jqueryval")
}
